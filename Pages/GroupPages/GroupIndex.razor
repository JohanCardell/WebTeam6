@page  "/groups"

@inject IGroupService groupService
@inject IUserService userService

<h3>Index</h3>
<p>Shows all groups in database. You can add and delete users. Edit is not implemented. Crashes if Owner name has no match in database.</p>

@if (groupList == null)
{
    <div class="loader"></div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Owner</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var groupItem in groupList)
            {
            <tr>
                <td>@groupItem.Name</td>
                <td>@groupItem.Owner?.UserName</td>
                <td><a id="group-details-btn" type="button" href="@($"groupdetails/{groupItem.Id}")" role="button" class="btn btn-info">Details</a></td>
                <td><input id="group-edit-btn" type="button" class="btn btn-primary" value="Edit" /></td>
                <td><input id="group-delete-btn " type="button" class="btn btn-danger" value="Delete" @onclick="(() => DeleteGroup(groupItem))" /></td>
            </tr>
            }
        </tbody>
    </table>
}

<div>
    <input id="add-group-btn" type="button" data-toggle="modal" data-target="#groupModal" class="btn btn-primary" value="Add group" @onclick="(() => InitializeGroupObject())" />
</div>

<GroupCreation GroupObject=groupObject DataChanged="@DataChanged"></GroupCreation>

@code {
   

    List<Group> groupList = new List<Group>();

    Group groupObject = new Group();
       
    protected override async Task OnInitializedAsync()
    {
        groupList = await groupService.Get();
    }


    private void  InitializeGroupObject()
    {
        groupObject = new Group();
    }

    private async void DataChanged()
    {
        groupList = await groupService.Get();
        StateHasChanged();
    }

    private async Task DeleteGroup(Group group)
    {
        groupObject = group;
        var task = await groupService.Delete(groupObject.Id);
        groupList = await groupService.Get();
        groupObject = new Group();
    }
}
